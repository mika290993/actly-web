// App.jsx ‚Äî –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Actly

import React, { useState, useEffect } from "react";
import "./index.css";

const tasks = {
  emotions: [...],
  body: [...],
  imagination: [...],
  improvisation: [...]
};

function getDayNumber(startKey, totalDays = 60) {
  const stored = localStorage.getItem(startKey);
  let start = stored ? new Date(stored) : null;
  if (!start) {
    start = new Date();
    localStorage.setItem(startKey, start.toISOString());
  }
  const now = new Date();
  const diff = Math.floor((now - start) / (1000 * 60 * 60 * 24));
  return (diff % totalDays) + 1;
}

function getStreakKey() {
  const today = new Date().toISOString().split("T")[0];
  return `actly_checkin_${today}`;
}

function App() {
  const [category, setCategory] = useState("emotions");
  const currentDay = getDayNumber("actly_start_date");
  const [streak, setStreak] = useState(1);

  useEffect(() => {
    const todayKey = getStreakKey();
    if (!localStorage.getItem(todayKey)) {
      localStorage.setItem(todayKey, "true");
    }
    const allDays = Object.keys(localStorage).filter(k => k.startsWith("actly_checkin_"));
    setStreak(allDays.length);
  }, []);

  const getTask = () => {
    const index = (currentDay - 1) % 60;
    return tasks[category][index] || "–ó–∞–¥–∞–Ω–∏–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ–∑–∂–µ.";
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-[#1a1a1a] to-[#000] text-white flex flex-col items-center px-6 py-10 font-sans">
      <h1 className="text-6xl font-bold tracking-tight text-center text-white drop-shadow mb-4">
        <span className="text-yellow-400">Actly</span> üé≠
      </h1>
      <p className="text-lg text-gray-400 text-center max-w-xl mb-6">
        –¢–≤–æ—è —Å—Ü–µ–Ω–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. –í—ã–±–∏—Ä–∞–π –∫–∞—Ç–µ–≥–æ—Ä–∏—é ‚Äî –∏ –æ—Ç–∫—Ä—ã–≤–∞–π –Ω–æ–≤—ã–π –∞–∫—Ç—ë—Ä—Å–∫–∏–π –≤—ã–∑–æ–≤.
      </p>

      <div className="mb-5">
        <div className="bg-white/10 backdrop-blur-md text-yellow-300 font-medium px-4 py-2 rounded-full shadow border border-yellow-500/20">
          üî• –°–µ—Ä–∏—è: <span className="font-bold">{streak}</span> –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
        </div>
      </div>

      <div className="flex flex-wrap justify-center gap-3 mb-6">
        {Object.keys(tasks).map((key) => (
          <button
            key={key}
            onClick={() => setCategory(key)}
            className={`px-4 py-2 rounded-full text-sm font-semibold tracking-wide border transition duration-200 ${
              category === key
                ? "bg-yellow-400 text-black border-yellow-400 shadow-md"
                : "bg-white/10 text-white border-white/20 hover:bg-white/20"
            }`}
          >
            {key === "emotions" && "–≠–º–æ—Ü–∏–∏"}
            {key === "body" && "–¢–µ–ª–µ—Å–Ω–æ—Å—Ç—å"}
            {key === "imagination" && "–í–æ–æ–±—Ä–∞–∂–µ–Ω–∏–µ"}
            {key === "improvisation" && "–ò–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏—è"}
          </button>
        ))}
      </div>

      <div className="bg-zinc-900/70 backdrop-blur-md border border-zinc-700/50 p-6 rounded-3xl shadow-xl max-w-lg w-full text-center">
        <h2 className="text-2xl font-semibold text-yellow-300 mb-2">–î–µ–Ω—å {currentDay}</h2>
        <p className="text-lg text-white/90 leading-relaxed whitespace-pre-wrap">{getTask()}</p>
      </div>
    </div>
  );
}

export default App;
